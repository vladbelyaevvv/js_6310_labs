import { resolveReportById } from '../repo/reports.js';

export function registerResolveHandler(bot) {
  bot.command('resolve', async (ctx) => {
    const text = ctx.message.text || '';
    // –º–∞—Ç—á–∏–º: /resolve [@bot] <id> <–ª—é–±–æ–π —Ç–µ–∫—Å—Ç –º–µ—Ä>
    const m = text.match(/^\/resolve(?:@\w+)?\s+(\S+)\s+([\s\S]+)$/i);

    if (!m) {
      return ctx.reply('–§–æ—Ä–º–∞—Ç: /resolve id –æ–ø–∏—Å–∞–Ω–∏–µ_–º–µ—Ä\n–ü—Ä–∏–º–µ—Ä: /resolve 94dv36 –ë—Ä–∏–≥–∞–¥–∞ –≤—ã–µ—Ö–∞–ª–∞');
    }

    // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —É–±–µ—Ä—ë–º —Å–ª—É—á–∞–π–Ω—ã–µ <> –≤–æ–∫—Ä—É–≥ id
    const id = m[1].replace(/^<|>$/g, '');
    const measures = m[2].trim();

    if (!id || !measures) {
      return ctx.reply('–§–æ—Ä–º–∞—Ç: /resolve id –æ–ø–∏—Å–∞–Ω–∏–µ_–º–µ—Ä\n–ü—Ä–∏–º–µ—Ä: /resolve 94dv36 –ë—Ä–∏–≥–∞–¥–∞ –≤—ã–µ—Ö–∞–ª–∞');
    }

    const res = resolveReportById(id, measures);
    if (!res.ok) {
      return ctx.reply(`–ó–∞—è–≤–∫–∞ #${id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.`);
    }

    await ctx.reply(`–ó–∞—è–≤–∫–∞ #${id} –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ resolved. –ú–µ—Ä—ã: ${measures}`);

    // —É–≤–µ–¥–æ–º–∏–º –∞–≤—Ç–æ—Ä–∞ –∑–∞—è–≤–∫–∏, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏—à–ª–∞ –∏–∑ –¥—Ä—É–≥–æ–≥–æ —á–∞—Ç–∞
    if (res.chatId !== ctx.chat.id) {
      try {
        await ctx.telegram.sendMessage(
          res.chatId,
          `üì¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ –≤–∞—à–µ–π –∑–∞—è–≤–∫–µ #${id}:\n${measures}`
        );
      } catch(err) {
        console.warn('–ù–µ —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', err?.message);
      }
    }
  });
}
